diff --git a/py_ballisticcalc.exts/py_ballisticcalc_exts/base_engine.pxd b/py_ballisticcalc.exts/py_ballisticcalc_exts/base_engine.pxd
index 8335858..282dba1 100644
--- a/py_ballisticcalc.exts/py_ballisticcalc_exts/base_engine.pxd
+++ b/py_ballisticcalc.exts/py_ballisticcalc_exts/base_engine.pxd
@@ -61,6 +61,20 @@ cdef extern from "include/engine.h" nogil:
     # Typedef alias
     ctypedef Engine_s Engine_t
 
+    ctypedef ErrorType EmitCallback(
+        void *user_data,
+        double time,
+        double px,
+        double py,
+        double pz,
+        double vx,
+        double vy,
+        double vz,
+        double mach
+    ) noexcept nogil
+
+    ctypedef EmitCallback *EmitCallbackPtr
+
     # Declare the function signature type (not a pointer yet)
     ctypedef StatusCode IntegrateFunc(
         Engine_t *eng,
@@ -68,7 +82,8 @@ cdef extern from "include/engine.h" nogil:
         double range_step_ft,
         double time_step,
         TrajFlag_t filter_flags,
-        BaseTrajSeq_t *traj_seq_ptr,
+        void *emiter,
+        EmitCallbackPtr emiter_callback,
         TerminationReason *reason,
     ) noexcept nogil
 
@@ -84,6 +99,18 @@ cdef extern from "include/engine.h" nogil:
         IntegrateFuncPtr integrate_func_ptr
         ErrorStack err_stack
 
+    ErrorType BaseTrajSeq_t_append_wrapper(
+        void *user_data,
+        double time,
+        double px,
+        double py,
+        double pz,
+        double vx,
+        double vy,
+        double vz,
+        double mach
+    ) noexcept nogil
+
     void Engine_t_release_trajectory(Engine_t *eng) noexcept nogil
 
     StatusCode Engine_t_integrate(
@@ -92,7 +119,8 @@ cdef extern from "include/engine.h" nogil:
         double range_step_ft,
         double time_step,
         TrajFlag_t filter_flags,
-        BaseTrajSeq_t *traj_seq_ptr,
+        void *emiter,
+        EmitCallbackPtr emiter_callback,
         TerminationReason *reason,
     ) noexcept nogil
 
diff --git a/py_ballisticcalc.exts/py_ballisticcalc_exts/base_engine.pyx b/py_ballisticcalc.exts/py_ballisticcalc_exts/base_engine.pyx
index e6f4b6a..36b5cad 100644
--- a/py_ballisticcalc.exts/py_ballisticcalc_exts/base_engine.pyx
+++ b/py_ballisticcalc.exts/py_ballisticcalc_exts/base_engine.pyx
@@ -297,6 +297,7 @@ cdef class CythonizedBaseIntegrationEngine:
                 time_step,
                 <TrajFlag_t>filter_flags,
                 &trajectory._c_view,
+                BaseTrajSeq_t_append_wrapper,
                 &reason,
             )
 
@@ -664,7 +665,7 @@ cdef class CythonizedBaseIntegrationEngine:
             raise NotImplementedError("integrate_func not implemented or not provided")
 
         cdef:
-            BaseTrajSeqT traj_seq = BaseTrajSeqT()
+            BaseTrajSeqT trajectory = BaseTrajSeqT()
             TerminationReason reason
 
         cdef StatusCode status = Engine_t_integrate(
@@ -673,12 +674,13 @@ cdef class CythonizedBaseIntegrationEngine:
             range_step_ft,
             time_step,
             filter_flags,
-            &traj_seq._c_view,
+            &trajectory._c_view,
+            BaseTrajSeq_t_append_wrapper,
             &reason,
         )
 
         if status == StatusCode.STATUS_SUCCESS:
-            return traj_seq, reason
+            return trajectory, reason
         cdef ErrorFrame *err = last_err(&self._engine.err_stack)
         self._raise_solver_runtime_error(err)
 
diff --git a/py_ballisticcalc.exts/py_ballisticcalc_exts/euler_engine.pxd b/py_ballisticcalc.exts/py_ballisticcalc_exts/euler_engine.pxd
index b3e6131..0cf2787 100644
--- a/py_ballisticcalc.exts/py_ballisticcalc_exts/euler_engine.pxd
+++ b/py_ballisticcalc.exts/py_ballisticcalc_exts/euler_engine.pxd
@@ -14,6 +14,7 @@ from py_ballisticcalc_exts.base_engine cimport (
     Engine_t,
     StatusCode,
     TerminationReason,
+    EmitCallbackPtr,
 )
 
 
@@ -23,7 +24,8 @@ cdef extern from "include/euler.h" nogil:
         Engine_t *eng,
         double range_limit_ft, double range_step_ft,
         double time_step, TrajFlag_t filter_flags,
-        BaseTrajSeq_t *traj_seq_ptr,
+        void *emiter,
+        EmitCallbackPtr emiter_callback,
         TerminationReason *reason,
     ) noexcept nogil
 
diff --git a/py_ballisticcalc.exts/py_ballisticcalc_exts/include/engine.h b/py_ballisticcalc.exts/py_ballisticcalc_exts/include/engine.h
index 6d1804d..f79c8fc 100644
--- a/py_ballisticcalc.exts/py_ballisticcalc_exts/include/engine.h
+++ b/py_ballisticcalc.exts/py_ballisticcalc_exts/include/engine.h
@@ -59,13 +59,27 @@ typedef struct
 
 typedef struct Engine_s Engine_t;
 
+typedef ErrorType EmitCallback(
+    void *user_data,
+    double time,
+    double px,
+    double py,
+    double pz,
+    double vx,
+    double vy,
+    double vz,
+    double mach);
+
+typedef EmitCallback *EmitCallbackPtr;
+
 typedef StatusCode IntegrateFunc(
     Engine_t *eng,
     double range_limit_ft,
     double range_step_ft,
     double time_step,
     TrajFlag_t filter_flags,
-    BaseTrajSeq_t *traj_seq_ptr,
+    void *emiter,
+    EmitCallbackPtr emiter_callback,
     TerminationReason *reason);
 
 typedef IntegrateFunc *IntegrateFuncPtr;
@@ -87,6 +101,17 @@ extern "C"
 
     void require_non_null_fatal(const void *ptr, const char *file, int line, const char *func);
 
+    ErrorType BaseTrajSeq_t_append_wrapper(
+        void *user_data,
+        double time,
+        double px,
+        double py,
+        double pz,
+        double vx,
+        double vy,
+        double vz,
+        double mach);
+
     void Engine_t_release_trajectory(Engine_t *eng);
 
     StatusCode Engine_t_integrate(
@@ -95,7 +120,8 @@ extern "C"
         double range_step_ft,
         double time_step,
         TrajFlag_t filter_flags,
-        BaseTrajSeq_t *traj_seq_ptr,
+        void *emiter,
+        EmitCallbackPtr emiter_callback,
         TerminationReason *reason);
 
     StatusCode Engine_t_find_apex(Engine_t *eng, BaseTrajData_t *out);
diff --git a/py_ballisticcalc.exts/py_ballisticcalc_exts/include/euler.h b/py_ballisticcalc.exts/py_ballisticcalc_exts/include/euler.h
index a38c8cb..0282298 100644
--- a/py_ballisticcalc.exts/py_ballisticcalc_exts/include/euler.h
+++ b/py_ballisticcalc.exts/py_ballisticcalc_exts/include/euler.h
@@ -15,7 +15,8 @@ extern "C"
         Engine_t *eng,
         double range_limit_ft, double range_step_ft,
         double time_step, TrajFlag_t filter_flags,
-        BaseTrajSeq_t *traj_seq_ptr,
+        void *emiter,
+        EmitCallbackPtr emiter_callback,
         TerminationReason *reason);
 
 #ifdef __cplusplus
diff --git a/py_ballisticcalc.exts/py_ballisticcalc_exts/include/rk4.h b/py_ballisticcalc.exts/py_ballisticcalc_exts/include/rk4.h
index b3d713d..b9507b9 100644
--- a/py_ballisticcalc.exts/py_ballisticcalc_exts/include/rk4.h
+++ b/py_ballisticcalc.exts/py_ballisticcalc_exts/include/rk4.h
@@ -15,7 +15,8 @@ extern "C"
         Engine_t *eng,
         double range_limit_ft, double range_step_ft,
         double time_step, TrajFlag_t filter_flags,
-        BaseTrajSeq_t *traj_seq_ptr,
+        void *emiter,
+        EmitCallbackPtr emiter_callback,
         TerminationReason *reason);
 
 #ifdef __cplusplus
diff --git a/py_ballisticcalc.exts/py_ballisticcalc_exts/rk4_engine.pxd b/py_ballisticcalc.exts/py_ballisticcalc_exts/rk4_engine.pxd
index 220226f..7b53765 100644
--- a/py_ballisticcalc.exts/py_ballisticcalc_exts/rk4_engine.pxd
+++ b/py_ballisticcalc.exts/py_ballisticcalc_exts/rk4_engine.pxd
@@ -16,6 +16,7 @@ from py_ballisticcalc_exts.base_traj_seq cimport BaseTrajSeq_t
 from py_ballisticcalc_exts.base_engine cimport (
     Engine_t,
     StatusCode,
+    EmitCallbackPtr,
     TerminationReason,
 )
 
@@ -25,7 +26,8 @@ cdef extern from "include/rk4.h" nogil:
         Engine_t *eng,
         double range_limit_ft, double range_step_ft,
         double time_step, TrajFlag_t filter_flags,
-        BaseTrajSeq_t *traj_seq_ptr,
+        void *emiter,
+        EmitCallbackPtr emiter_callback,
         TerminationReason *reason,
     ) noexcept nogil
 
diff --git a/py_ballisticcalc.exts/py_ballisticcalc_exts/src/engine.c b/py_ballisticcalc.exts/py_ballisticcalc_exts/src/engine.c
index b737dac..406dd02 100644
--- a/py_ballisticcalc.exts/py_ballisticcalc_exts/src/engine.c
+++ b/py_ballisticcalc.exts/py_ballisticcalc_exts/src/engine.c
@@ -43,6 +43,25 @@ void require_non_null_fatal(const void *ptr, const char *file, int line, const c
     }
 }
 
+ErrorType BaseTrajSeq_t_append_wrapper(
+    void *user_data,
+    double time,
+    double px,
+    double py,
+    double pz,
+    double vx,
+    double vy,
+    double vz,
+    double mach)
+{
+    return BaseTrajSeq_t_append(
+        (BaseTrajSeq_t *)user_data,
+        time,
+        px, py, pz,
+        vx, vy, vz,
+        mach);
+}
+
 void Engine_t_release_trajectory(Engine_t *eng)
 {
     if (eng == NULL)
@@ -59,10 +78,11 @@ StatusCode Engine_t_integrate(
     double range_step_ft,
     double time_step,
     TrajFlag_t filter_flags,
-    BaseTrajSeq_t *traj_seq_ptr,
+    void *emiter,
+    EmitCallbackPtr emiter_callback,
     TerminationReason *reason)
 {
-    if (!eng || !traj_seq_ptr || !reason || !eng->integrate_func_ptr)
+    if (!eng || !emiter || !emiter_callback || !reason || !eng->integrate_func_ptr)
     {
         REQUIRE_NON_NULL(eng);
         PUSH_ERR(&eng->err_stack, T_INPUT_ERROR, SRC_INTEGRATE, "Invalid input (NULL pointer).");
@@ -70,7 +90,13 @@ StatusCode Engine_t_integrate(
     }
     C_LOG(LOG_LEVEL_DEBUG, "Using integration function pointer %p.", (void *)eng->integrate_func_ptr);
 
-    StatusCode status = eng->integrate_func_ptr(eng, range_limit_ft, range_step_ft, time_step, filter_flags, traj_seq_ptr, reason);
+    StatusCode status = eng->integrate_func_ptr(
+        eng,
+        range_limit_ft, range_step_ft,
+        time_step, filter_flags,
+        emiter,
+        emiter_callback,
+        reason);
 
     if (status != STATUS_ERROR)
     {
@@ -121,7 +147,10 @@ StatusCode Engine_t_find_apex(Engine_t *eng, BaseTrajData_t *out)
 
     // try
     TerminationReason reason;
-    status = Engine_t_integrate(eng, 9e9, 9e9, 0.0, TFLAG_APEX, &result, &reason);
+    status = Engine_t_integrate(
+        eng, 9e9, 9e9, 0.0, TFLAG_APEX,
+        &result, BaseTrajSeq_t_append_wrapper,
+        &reason);
 
     if (status != STATUS_SUCCESS)
     {
@@ -177,7 +206,10 @@ StatusCode Engine_t_error_at_distance(
     eng->shot.barrel_elevation = angle_rad;
 
     TerminationReason reason;
-    StatusCode status = Engine_t_integrate(eng, 9e9, 9e9, 0.0, TFLAG_APEX, &trajectory, &reason);
+    StatusCode status = Engine_t_integrate(
+        eng, 9e9, 9e9, 0.0, TFLAG_APEX,
+        &trajectory, BaseTrajSeq_t_append_wrapper,
+        &reason);
 
     if (status != STATUS_SUCCESS)
     {
@@ -413,7 +445,9 @@ StatusCode Engine_t_zero_angle(
         BaseTrajSeq_t_init(&seq);
 
         TerminationReason reason;
-        status = Engine_t_integrate(eng, target_x_ft, target_x_ft, 0.0, TFLAG_NONE, &seq, &reason);
+        status = Engine_t_integrate(
+            eng, target_x_ft, target_x_ft, 0.0, TFLAG_NONE,
+            &seq, BaseTrajSeq_t_append_wrapper, &reason);
 
         if (status != STATUS_SUCCESS)
         {
@@ -595,7 +629,11 @@ static StatusCode Engine_t_range_for_angle(Engine_t *eng, double angle_rad, doub
     BaseTrajSeq_t_init(&trajectory);
 
     TerminationReason reason;
-    status = Engine_t_integrate(eng, 9e9, 9e9, 0.0, TFLAG_NONE, &trajectory, &reason);
+    status = Engine_t_integrate(
+        eng, 9e9, 9e9, 0.0, TFLAG_NONE,
+        &trajectory, BaseTrajSeq_t_append_wrapper,
+        &reason);
+
     if (status != STATUS_SUCCESS)
     {
         status = STATUS_ERROR;
diff --git a/py_ballisticcalc.exts/py_ballisticcalc_exts/src/euler.c b/py_ballisticcalc.exts/py_ballisticcalc_exts/src/euler.c
index 98eb200..bd2d3b1 100644
--- a/py_ballisticcalc.exts/py_ballisticcalc_exts/src/euler.c
+++ b/py_ballisticcalc.exts/py_ballisticcalc_exts/src/euler.c
@@ -41,10 +41,11 @@ StatusCode _integrate_euler(
     Engine_t *eng,
     double range_limit_ft, double range_step_ft,
     double time_step, TrajFlag_t filter_flags,
-    BaseTrajSeq_t *traj_seq_ptr,
+    void *emiter,
+    EmitCallbackPtr emiter_callback,
     TerminationReason *reason)
 {
-    if (!eng || !traj_seq_ptr || !reason)
+    if (!eng || !emiter || !emiter_callback || !reason)
     {
         REQUIRE_NON_NULL(eng);
         PUSH_ERR(&eng->err_stack, T_INPUT_ERROR, SRC_INTEGRATE, "Invalid input (NULL pointer).");
@@ -133,8 +134,8 @@ StatusCode _integrate_euler(
         // Store point in trajectory sequence
 
         // err =
-        BaseTrajSeq_t_append(
-            traj_seq_ptr,
+        emiter_callback(
+            emiter,
             time,
             range_vector.x, range_vector.y, range_vector.z,
             velocity_vector.x, velocity_vector.y, velocity_vector.z,
@@ -203,8 +204,8 @@ StatusCode _integrate_euler(
     // Add final data point
 
     // err =
-    BaseTrajSeq_t_append(
-        traj_seq_ptr,
+    emiter_callback(
+        emiter,
         time,
         range_vector.x, range_vector.y, range_vector.z,
         velocity_vector.x, velocity_vector.y, velocity_vector.z,
diff --git a/py_ballisticcalc.exts/py_ballisticcalc_exts/src/rk4.c b/py_ballisticcalc.exts/py_ballisticcalc_exts/src/rk4.c
index 8413eb1..bb0a05e 100644
--- a/py_ballisticcalc.exts/py_ballisticcalc_exts/src/rk4.c
+++ b/py_ballisticcalc.exts/py_ballisticcalc_exts/src/rk4.c
@@ -80,10 +80,11 @@ StatusCode _integrate_rk4(
     Engine_t *eng,
     double range_limit_ft, double range_step_ft,
     double time_step, TrajFlag_t filter_flags,
-    BaseTrajSeq_t *traj_seq_ptr,
+    void *emiter,
+    EmitCallbackPtr emiter_callback,
     TerminationReason *reason)
 {
-    if (!eng || !traj_seq_ptr || !reason)
+    if (!eng || !emiter || !emiter_callback || !reason)
     {
         REQUIRE_NON_NULL(eng);
         PUSH_ERR(&eng->err_stack, T_INPUT_ERROR, SRC_INTEGRATE, "Invalid input (NULL pointer).");
@@ -199,8 +200,8 @@ StatusCode _integrate_rk4(
         C_LOG(LOG_LEVEL_DEBUG, "About to append to trajectory sequence\n");
 
         // err =
-        BaseTrajSeq_t_append(
-            traj_seq_ptr,
+        emiter_callback(
+            emiter,
             time,
             range_vector.x, range_vector.y, range_vector.z,
             velocity_vector.x, velocity_vector.y, velocity_vector.z,
@@ -318,8 +319,8 @@ StatusCode _integrate_rk4(
     // Process final data point
 
     // err =
-    BaseTrajSeq_t_append(
-        traj_seq_ptr,
+    emiter_callback(
+        emiter,
         time,
         range_vector.x, range_vector.y, range_vector.z,
         velocity_vector.x, velocity_vector.y, velocity_vector.z,
