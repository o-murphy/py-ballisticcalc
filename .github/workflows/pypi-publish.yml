name: Build and Upload Python Package to PyPI

on:
  release:
    types: [ published, edited ]
  workflow_dispatch:
    inputs:
      testpypi:
        description: "Publish to test pypi"
        required: false
        type: boolean
        default: false

run-name: >
  Build & Publish â†’ ${{ github.event_name == 'release' && 'PyPI' ||
      github.event_name == 'workflow_dispatch' && inputs.testpypi && 'TestPyPI' ||
      'Build Only' }}

permissions:
  contents: read

jobs:

  build:
    name: Build wheels on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-14, macos-15 ]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Validate exts version matching
        run: uv run hooks/version_check.py
        shell: bash

      - name: Install dependencies
        run: python -m pip install build cibuildwheel twine
        shell: bash

      - name: Build pure python package
        run: python -m build
        shell: bash

      - name: Build binary python package
        run: |
          cd ./py_ballisticcalc.exts
          python -m build --sdist --outdir ../dist
          cibuildwheel --output-dir ../dist
          cd ..
        shell: bash

      - name: List ./dist
        run: ls ./dist
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: ./dist

  publish:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'release' && 'pypi' || inputs.testpypi && 'testpypi' || 'build' }}
    permissions:
      id-token: write

    steps:
      # - name: Download artifacts (Ubuntu)
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: dist-ubuntu-latest
      #     path: ./dist-ubuntu

      # - name: Download artifacts (Windows)
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: dist-windows-latest
      #     path: ./dist-windows

      # - name: Download artifacts (macOS 14)
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: dist-macos-14
      #     path: ./dist-macos-14

      # - name: Download artifacts (macOS 15)
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: dist-macos-15
      #     path: ./dist-macos-15

      - name: Download all artifacts dynamically
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          path: ./all-dist

      # - name: Combine artifacts
      #   run: |
      #     mkdir -p dist
      #     cp ./dist-ubuntu/* dist/ || true
      #     cp ./dist-windows/* dist/ || true
      #     cp ./dist-macos-14/* dist/ || true
      #     cp ./dist-macos-15/* dist/ || true
      #   shell: bash

      - name: Combine artifacts
        run: |
          mkdir -p dist
          find ./all-dist -type f -exec cp {} dist/ \;
        shell: bash
      
      - name: List ./dist
        run: ls ./dist
        shell: bash
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist
          retention-days: 14

      - name: Publish package distributions to PyPI
        if: ${{ github.event_name == 'release' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.testpypi == true }}
        with:
          skip-existing: true
          repository-url: https://test.pypi.org/legacy/
