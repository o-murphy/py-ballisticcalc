# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Pytest Cythonized RK4

on:
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-13, macos-14 ]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Validate exts version matching
      run: |
        uv pip install tomli
        python hooks/version_check.py

    - name: Install the project
      run: |
        uv pip install -e .[dev]      

    - name: Build cython modules
      run: |
        uv pip install -e ./py_ballisticcalc.exts

    - name: Run unittest tests in binary mode
      run: |
        pytest tests --no-header -v --engine=CythonizedRK4IntegrationEngine
        if [ $? -ne 0 ]; then
          echo "Pytest failed, running without capture"
          pytest tests -v --engine=CythonizedRK4IntegrationEngine
        else
          echo "Pytest succeeded."
        fi
      shell: bash
