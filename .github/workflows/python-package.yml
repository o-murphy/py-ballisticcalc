# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package tests

on:
  pull_request:
    branches:
      - '*'
  workflow_dispatch:


jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |     
        python -m pip install --upgrade pip
        python -m pip install setuptools cython
        python -m pip install -e .[dev]

    - name: Check Python version and install tomli if less than 3.11
      run: |
        python_version=$(python -c "import sys; print('.'.join(map(str, sys.version_info[:2])))")
        if [ $(echo "${python_version} < 3.11" | bc -l) -eq 1 ]; then
            python -m pip install tomli
        fi

    - name: Run unittest tests in pure python mode
      run: |
        if pytest tests --no-header --no-summary -v; then
          echo "Pytest succeeded."
        else
          echo "Pytest failed, running without capture"
          # Add your additional commands here
          pytest tests -v
        fi

    - name: Build cython modules
      run: |
        cd py_ballisticcalc_exts
        python setup.py build_ext --inplace
        cd ..

    - name: Run unittest tests in binary mode
      run: |
        if pytest tests --no-header --no-summary -v; then
          echo "Pytest succeeded."
        else
          echo "Pytest failed, running without capture"
          # Add your additional commands here
          pytest tests --no-header --no-summary -v -s
        fi
