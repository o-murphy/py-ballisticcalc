# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Pytest

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*' # Run for all branches on push
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ] # Default to ubuntu-latest
        python-version: ["3.9"] # Default to Python 3.9

        # Conditionally expand the matrix for pull requests
        include:
          - if: github.event_name == 'pull_request'
            os: [ ubuntu-latest, windows-latest, macos-13, macos-14 ]
            python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Validate exts version matching
      run: |
        uv pip install tomli
        python hooks/version_check.py

    - name: Install the project
      run: |
        uv pip install -e .[dev]

    - name: Run tests in pure python mode
      run: |
        pytest tests --no-header -v -n auto --engine=py_ballisticcalc
        if [ $? -ne 0 ]; then
          echo "Pytest failed, running without capture"
          pytest tests -v --engine=py_ballisticcalc
        else
          echo Pytest succeeded.
        fi
      shell: bash
